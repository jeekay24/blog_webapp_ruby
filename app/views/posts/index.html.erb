<!-- app/views/posts/index.html.erb -->
<div class="posts-container">
  <header class="posts-header">
    <h1 class="main-title">
      <i class="icon">üìù</i>
      My Blog Posts
    </h1>
    <p class="subtitle">Share your thoughts with the world</p>
  </header>

  <div class="actions-bar">
    <%= link_to new_post_path, class: 'btn btn-primary new-post-btn' do %>
      <i class="icon">‚ú®</i>
      Create New Post
    <% end %>
    
    <div class="posts-count">
      <span class="count-number"><%= @posts.count %></span>
      <span class="count-label">posts published</span>
    </div>
  </div>

  <% if @posts.any? %>
    <div class="posts-grid">
      <% @posts.each do |post| %>
        <article class="post-card" data-post-id="<%= post.id %>">
          <div class="post-content">
            <h3 class="post-title">
              <%= link_to post.title, post_path(post), class: 'post-link' %>
            </h3>
            
            <div class="post-body">
              <%= truncate(post.body, length: 150, separator: ' ') %>
            </div>
            
            <div class="post-meta">
              <span class="created-date">
                <i class="icon">üìÖ</i>
                <%= post.created_at.strftime("%B %d, %Y") %>
              </span>
              
              <% if post.created_at != post.updated_at %>
                <span class="updated-badge">Updated</span>
              <% end %>
            </div>
          </div>
          
          <div class="post-actions">
            <%= link_to 'Read More', post_path(post), class: 'btn btn-outline' %>
            <%= link_to 'Edit', edit_post_path(post), class: 'btn btn-secondary' %>
            <%= form_with model: post, method: :delete, class: 'inline-form', data: { turbo: false } do |form| %>
  <%= form.submit 'üóëÔ∏è Delete', 
                  class: 'btn btn-danger', 
                  data: { confirm: "Are you sure you want to delete '#{post.title}'?\n\nThis action cannot be undone." } %>
<% end %>
          </div>
        </article>
      <% end %>
    </div>
  <% else %>
    <div class="empty-state">
      <div class="empty-icon">üìù</div>
      <h3>No posts yet</h3>
      <p>Start sharing your thoughts by creating your first blog post!</p>
      <%= link_to 'Create Your First Post', new_post_path, class: 'btn btn-primary' %>
    </div>
  <% end %>
</div>

<style>
  /* Modern CSS Styles */
  .posts-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    min-height: 100vh;
  }

  .posts-header {
    text-align: center;
    margin-bottom: 40px;
    color: white;
  }

  .main-title {
    font-size: 3rem;
    font-weight: 700;
    margin: 0;
    text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
  }

  .main-title .icon {
    font-size: 2.5rem;
    margin-right: 15px;
  }

  .subtitle {
    font-size: 1.2rem;
    opacity: 0.9;
    margin: 10px 0 0 0;
  }

  .actions-bar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 30px;
    background: rgba(255,255,255,0.1);
    padding: 20px;
    border-radius: 15px;
    backdrop-filter: blur(10px);
  }

  .posts-count {
    color: white;
    text-align: center;
  }

  .count-number {
    display: block;
    font-size: 2rem;
    font-weight: bold;
  }

  .count-label {
    font-size: 0.9rem;
    opacity: 0.8;
  }

  .posts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: 25px;
    margin-bottom: 40px;
  }

  .post-card {
    background: white;
    border-radius: 15px;
    padding: 25px;
    box-shadow: 0 10px 30px rgba(0,0,0,0.2);
    transition: all 0.3s ease;
    border: 1px solid rgba(255,255,255,0.2);
  }

  .post-card:hover {
    transform: translateY(-8px);
    box-shadow: 0 20px 40px rgba(0,0,0,0.3);
  }

  .post-title {
    margin: 0 0 15px 0;
    font-size: 1.4rem;
    font-weight: 600;
  }

  .post-link {
    color: #4a5568;
    text-decoration: none;
    transition: color 0.3s ease;
  }

  .post-link:hover {
    color: #667eea;
  }

  .post-body {
    color: #666;
    line-height: 1.6;
    margin-bottom: 20px;
    font-size: 0.95rem;
  }

  .post-meta {
    display: flex;
    align-items: center;
    gap: 15px;
    margin-bottom: 20px;
    font-size: 0.85rem;
    color: #888;
  }

  .created-date .icon {
    margin-right: 5px;
  }

  .updated-badge {
    background: #ffd93d;
    color: #333;
    padding: 2px 8px;
    border-radius: 12px;
    font-size: 0.75rem;
    font-weight: 500;
  }

  .post-actions {
    display: flex;
    gap: 10px;
    flex-wrap: wrap;
  }

  /* Button Styles */
  .btn {
    padding: 10px 20px;
    border-radius: 8px;
    text-decoration: none;
    font-weight: 500;
    border: none;
    cursor: pointer;
    transition: all 0.3s ease;
    font-size: 0.9rem;
    display: inline-flex;
    align-items: center;
    gap: 8px;
  }

  .btn-primary {
    background: linear-gradient(135deg, #667eea, #764ba2);
    color: white;
    box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
  }

  .btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(102, 126, 234, 0.6);
  }

  .btn-outline {
    background: transparent;
    color: #667eea;
    border: 2px solid #667eea;
  }

  .btn-outline:hover {
    background: #667eea;
    color: white;
  }

  .btn-secondary {
    background: #48bb78;
    color: white;
  }

  .btn-secondary:hover {
    background: #38a169;
    transform: translateY(-1px);
  }

  .btn-danger {
    background: #f56565;
    color: white;
  }

  .btn-danger:hover {
    background: #e53e3e;
    transform: translateY(-1px);
  }

  .new-post-btn .icon {
    font-size: 1.1rem;
  }

  /* Empty State */
  .empty-state {
    text-align: center;
    background: rgba(255,255,255,0.1);
    padding: 60px 40px;
    border-radius: 20px;
    backdrop-filter: blur(10px);
    color: white;
  }

  .empty-icon {
    font-size: 4rem;
    margin-bottom: 20px;
  }

  .empty-state h3 {
    font-size: 1.8rem;
    margin-bottom: 10px;
    font-weight: 600;
  }

  .empty-state p {
    font-size: 1.1rem;
    opacity: 0.8;
    margin-bottom: 30px;
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .posts-container {
      padding: 15px;
    }
    
    .main-title {
      font-size: 2rem;
    }
    
    .actions-bar {
      flex-direction: column;
      gap: 20px;
    }
    
    .posts-grid {
      grid-template-columns: 1fr;
    }
    
    .post-actions {
      justify-content: center;
    }
  }

  /* Loading Animation */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .post-card {
    animation: fadeInUp 0.6s ease forwards;
  }
</style>

<script>
  // Interactive JavaScript
  document.addEventListener('DOMContentLoaded', function() {
    // Enhanced delete confirmation
    const deleteButtons = document.querySelectorAll('.delete-btn');
    
    deleteButtons.forEach(button => {
      button.addEventListener('click', function(e) {
        const postTitle = this.dataset.postTitle;
        const customMessage = `Are you sure you want to delete "${postTitle}"?\n\nThis action cannot be undone.`;
        
        if (!confirm(customMessage)) {
          e.preventDefault();
        } else {
          // Add loading state
          this.innerHTML = '<i class="icon">‚è≥</i> Deleting...';
          this.style.pointerEvents = 'none';
        }
      });
    });

    // Add hover effects to post cards
    const postCards = document.querySelectorAll('.post-card');
    
    postCards.forEach(card => {
      card.addEventListener('mouseenter', function() {
        this.style.background = 'linear-gradient(135deg, #ffffff, #f7fafc)';
      });
      
      card.addEventListener('mouseleave', function() {
        this.style.background = 'white';
      });
    });

    // Add click analytics (optional)
    const postLinks = document.querySelectorAll('.post-link');
    
    postLinks.forEach(link => {
      link.addEventListener('click', function() {
        const postId = this.closest('.post-card').dataset.postId;
        console.log(`Post ${postId} clicked`); // You can replace this with analytics
      });
    });

    // Auto-refresh posts count animation
    const countNumber = document.querySelector('.count-number');
    if (countNumber) {
      const finalCount = parseInt(countNumber.textContent);
      let currentCount = 0;
      const increment = Math.ceil(finalCount / 20);
      
      const counter = setInterval(() => {
        currentCount += increment;
        if (currentCount >= finalCount) {
          currentCount = finalCount;
          clearInterval(counter);
        }
        countNumber.textContent = currentCount;
      }, 50);
    }
  });
</script>